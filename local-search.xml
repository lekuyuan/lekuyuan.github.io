<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>telegraf采集类型说明</title>
    <link href="/2024/07/14/monitor/go%E5%AD%A6%E4%B9%A0%E5%A4%A7%E7%BA%B2/"/>
    <url>/2024/07/14/monitor/go%E5%AD%A6%E4%B9%A0%E5%A4%A7%E7%BA%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="1-untyped-、-summary-、-histogram、counter、以及gauge-都是用于什么场景下？"><a href="#1-untyped-、-summary-、-histogram、counter、以及gauge-都是用于什么场景下？" class="headerlink" title="1. untyped 、 summary 、 histogram、counter、以及gauge 都是用于什么场景下？"></a>1. untyped 、 summary 、 histogram、counter、以及gauge 都是用于什么场景下？</h2><p class="note note-warning">说明</p><ol><li>Untyped：适用于未知类型的数据，可以将任何类型的数据作为指标值。</li><li>Summary：适用于度量数据的分布情况，例如响应时间、延迟等。可以计算数据的平均值、中位数、标准偏差等。</li><li>Histogram：适用于度量数据的分布情况，例如请求大小、响应大小等。可以将数据分成不同的桶，然后计算每个桶中数据的数量和百分比。</li><li>Counter：适用于计数器，例如请求数、错误数等。可以记录数据的增量，然后计算总数。</li><li>Gauge：适用于记录当前数值的数据，例如CPU使用率、内存使用率等。可以记录数据的实时状态，然后进行监控和报警。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Telegraf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Telegraf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Protocol Buffers</title>
    <link href="/2024/06/21/go/protocol_buffers/"/>
    <url>/2024/06/21/go/protocol_buffers/</url>
    
    <content type="html"><![CDATA[<h2 id="Go-Protocol-Buffers"><a href="#Go-Protocol-Buffers" class="headerlink" title="Go Protocol Buffers"></a>Go Protocol Buffers</h2><p class="note note-success">0.安装protoc编译器</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs txt"># github下载<br>地址：https://github.com/protocolbuffers/protobuf/releases<br>下载对应平台的二进制文件解压，并配置到环境变量中，方便调用此命令。<br>我的电脑是windows10-amd64的，所以下载的是protoc-3.7.0-win64.zip<br><br># 配置好环境变量后执行protoc命令是否有打印输出<br># 有命令提示help，代表就可以啦<br></code></pre></td></tr></table></figure><p class="note note-success">1.安装protoco-gen-go</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">go install google.golang.org/protobuf/cmd/protoc-gen-go@latest<br></code></pre></td></tr></table></figure><p class="note note-success">2.编辑创建protoc文件</p><p>创建一个文件夹<code>helloproto</code>，创建文件<code>student.prto</code></p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-6ae3e036" role="button" aria-expanded="false" aria-controls="collapse-6ae3e036">        <div class="fold-arrow">▶</div>student.proto文件如下      </div>      <div class="fold-collapse collapse" id="collapse-6ae3e036">        <div class="fold-content">          <figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs protobuf">syntax = <span class="hljs-string">&quot;proto3&quot;</span>;<br><span class="hljs-keyword">package</span> helloproto;<br><br><span class="hljs-keyword">option</span> go_package =<span class="hljs-string">&quot;.&quot;</span>;<br><br><span class="hljs-keyword">message </span><span class="hljs-title class_">Student</span> &#123;<br>    <span class="hljs-type">string</span> name = <span class="hljs-number">1</span>;<br>    <span class="hljs-type">bool</span> male = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">repeated</span> <span class="hljs-type">int32</span> scores = <span class="hljs-number">3</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>        </div>      </div>    </div><p class="note note-success">3.执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">protoc --go_out=. *.proto<br></code></pre></td></tr></table></figure><blockquote><p>也可以参考博客<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://blog.csdn.net/m0_52649917/article/details/121599809">[1]</span></a></sup>,进行配置。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/m0_52649917/article/details/121599809">https://blog.csdn.net/m0_52649917/article/details/121599809</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Go</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Protocol Buffers</title>
    <link href="/2024/06/21/gin/gin/"/>
    <url>/2024/06/21/gin/gin/</url>
    
    <content type="html"><![CDATA[<h2 id="Gin-web框架"><a href="#Gin-web框架" class="headerlink" title="Gin web框架"></a>Gin web框架</h2><p class="note note-success">0.安装</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">github.com/gin-gonic/gin<br></code></pre></td></tr></table></figure><p class="note note-success">1.使用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs go">r := gin.Default()<br>r.Get(<span class="hljs-string">&quot;/ping&quot;</span>,pong)<br>r.Run(<span class="hljs-string">&quot;:8083&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">pong</span><span class="hljs-params">(c *gin.Context)</span></span> &#123;<br>c.JSON(http.StatusOK, gin.H&#123;<br><span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span>,<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p class="note note-success">2.路由配置</p><p>创建一个文件夹<code>helloproto</code>，创建文件<code>student.prto</code></p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-6ae3e036" role="button" aria-expanded="false" aria-controls="collapse-6ae3e036">        <div class="fold-arrow">▶</div>路由 如下      </div>      <div class="fold-collapse collapse" id="collapse-6ae3e036">        <div class="fold-content">          <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go">router := gin.Default()<br>goodGroup := router.Group(<span class="hljs-string">&quot;/goods&quot;</span>)<br><br>&#123;<br>goodGroup.Get(<span class="hljs-string">&quot;/list&quot;</span>,goodsList)<br>goodGroup.Post(<span class="hljs-string">&quot;/update&quot;</span>, updateGood)<br>&#125;<br><br></code></pre></td></tr></table></figure>        </div>      </div>    </div><p class="note note-success">3.获取请求的值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// :匹配中间值</span><br>goodGroup.Get(<span class="hljs-string">&quot;/user/:name/:action&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(c *gin.Context)</span></span>&#123;<br>    name := c.Param(<span class="hljs-string">&quot;name&quot;</span>)<br>    action:= c.Param(<span class="hljs-string">&quot;action&quot;</span>)<br>    c.String(http.StatusOK, <span class="hljs-string">&quot;%s is %s&quot;</span>, name, action)<br>&#125;)<br><br><span class="hljs-comment">// *匹配自己和后面所有的值</span><br>goodGroup.Get(<span class="hljs-string">&quot;/user/:name/*action&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">(c *gin.Context)</span></span>&#123;<br>    name := c.Param(<span class="hljs-string">&quot;name&quot;</span>)<br>    action:= c.Param(<span class="hljs-string">&quot;action&quot;</span>)<br>    c.String(http.StatusOK, <span class="hljs-string">&quot;%s is %s&quot;</span>, name, action)<br>&#125;)<br><br><br></code></pre></td></tr></table></figure><blockquote><p>也可以参考博客<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://blog.csdn.net/m0_52649917/article/details/121599809">[1]</span></a></sup>,进行配置。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/m0_52649917/article/details/121599809">https://blog.csdn.net/m0_52649917/article/details/121599809</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Go</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Go语言 -- 微服务用户模块开发</title>
    <link href="/2024/06/21/go/%E7%94%A8%E6%88%B7%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    <url>/2024/06/21/go/%E7%94%A8%E6%88%B7%E5%BE%AE%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="1-用户模块数据库搭建"><a href="#1-用户模块数据库搭建" class="headerlink" title="1. 用户模块数据库搭建"></a>1. 用户模块数据库搭建</h2><p class="note note-warn">编写用户结构体</p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-519a2360" role="button" aria-expanded="false" aria-controls="collapse-519a2360">        <div class="fold-arrow">▶</div>user.go文件如下      </div>      <div class="fold-collapse collapse" id="collapse-519a2360">        <div class="fold-content">          <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> model<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;time&quot;</span><br><br><span class="hljs-string">&quot;gorm.io/gorm&quot;</span><br>)<br><br><span class="hljs-keyword">type</span> BaseModel <span class="hljs-keyword">struct</span> &#123;<br>ID        <span class="hljs-type">int32</span>          <span class="hljs-string">`gorm:&quot;primarykey&quot;`</span><br>CreatedAt time.Time      <span class="hljs-string">`gorm:&quot;column:add_time;type: datetime comment &#x27;创建时间&#x27;&quot;`</span><br>UpdatedAt time.Time      <span class="hljs-string">`gorm:&quot;column:update_time;type: datetime comment &#x27;更新时间&#x27;&quot;`</span><br>DeletedAt gorm.DeletedAt <span class="hljs-string">`gorm:&quot;type: datetime comment &#x27;删除时间&#x27;&quot;`</span><br>IsDeleted <span class="hljs-type">bool</span>           <span class="hljs-string">`gorm:&quot;column:is_deleted; type: boolean comment &#x27;是否删除&#x27;&quot;`</span><br>&#125;<br><br><span class="hljs-keyword">type</span> User <span class="hljs-keyword">struct</span> &#123;<br>BaseModel<br>Mobile   <span class="hljs-type">string</span>     <span class="hljs-string">`gorm:&quot;index:idx_mobile;unique;type:varchar(11) comment &#x27;手机号&#x27;;not null&quot;`</span><br>Password <span class="hljs-type">string</span>     <span class="hljs-string">`gorm:&quot;type:varchar(100) comment &#x27;密码&#x27;;not null&quot;`</span><br>NickName <span class="hljs-type">string</span>     <span class="hljs-string">`gorm:&quot;type:varchar(20) comment &#x27;昵称&#x27;&quot;`</span><br>Birthday *time.Time <span class="hljs-string">`gorm:&quot;type:datetime comment &#x27;生日&#x27;&quot;`</span><br>Gender   <span class="hljs-type">string</span>     <span class="hljs-string">`gorm:&quot;column:gender;default:male;type:varchar(6) comment &#x27;female表示女,male表示男&#x27;&quot;`</span><br>Role     <span class="hljs-type">int8</span>       <span class="hljs-string">`gorm:&quot;column:role;default:1;type:int comment &#x27;1表示普通用户,2表示管理员&#x27;&quot;`</span><br>&#125;<br></code></pre></td></tr></table></figure>        </div>      </div>    </div><p class="note note-warn">    连接数据库执行创建表</p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-28ab9646" role="button" aria-expanded="false" aria-controls="collapse-28ab9646">        <div class="fold-arrow">▶</div>main.go      </div>      <div class="fold-collapse collapse" id="collapse-28ab9646">        <div class="fold-content">          <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> (<br><span class="hljs-string">&quot;fmt&quot;</span><br><span class="hljs-string">&quot;log&quot;</span><br><span class="hljs-string">&quot;os&quot;</span><br><span class="hljs-string">&quot;time&quot;</span><br><br><span class="hljs-string">&quot;gorm.io/driver/mysql&quot;</span><br><span class="hljs-string">&quot;gorm.io/gorm&quot;</span><br><span class="hljs-string">&quot;gorm.io/gorm/logger&quot;</span><br><span class="hljs-string">&quot;gorm.io/gorm/schema&quot;</span><br><br><span class="hljs-string">&quot;mxshop_srvs/user_srv/model&quot;</span><br>)<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>dsn := <span class="hljs-string">&quot;root:root@tcp(localhost:3306)/mxshop_user_srv?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span><br>fmt.Printf(dsn)<br>newLogger := logger.New(<br>log.New(os.Stdout, <span class="hljs-string">&quot;\r\n&quot;</span>, log.LstdFlags), <span class="hljs-comment">//io writer</span><br>logger.Config&#123;<br>SlowThreshold: time.Second,<br>LogLevel:      logger.Info,<br>Colorful:      <span class="hljs-literal">true</span>,<br>&#125;,<br>)<br><span class="hljs-comment">// 全局模式</span><br>db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;<br>NamingStrategy: schema.NamingStrategy&#123;<br><span class="hljs-comment">//TablePrefix: &quot;&quot;,</span><br>SingularTable: <span class="hljs-literal">true</span>,<br><span class="hljs-comment">//NameReplacer: nil,</span><br>&#125;,<br>Logger: newLogger,<br>&#125;)<br><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> &#123;<br><span class="hljs-built_in">panic</span>(<span class="hljs-string">&quot;failed to connect database&quot;</span>)<br>&#125;<br><span class="hljs-comment">//mxshop_user_src utf8mb4  utf8mb4_general_ci</span><br><span class="hljs-comment">// 设置全局的logger，这个logger在我们执行每个sql语句的时候会打印每一行sql</span><br><span class="hljs-comment">//sql才是最重要的，本着这个原则我尽量地给大家看到的每个api背后的sql语句是什么</span><br><br><span class="hljs-comment">//定义一个表结构，将表结构直接生成对应的表 -migrations</span><br><span class="hljs-comment">// 迁移schema</span><br>_ = db.AutoMigrate(&amp;model.User&#123;&#125;) <span class="hljs-comment">//此处应该有sql语句</span><br><br>&#125;<br></code></pre></td></tr></table></figure>        </div>      </div>    </div><p class="note note-warn">密码加密方法</p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-e064c6af" role="button" aria-expanded="false" aria-controls="collapse-e064c6af">        <div class="fold-arrow">▶</div>密码加密      </div>      <div class="fold-collapse collapse" id="collapse-e064c6af">        <div class="fold-content">          <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/*</span><br><span class="hljs-comment">密码加密:</span><br><span class="hljs-comment">密文、密文不可反解</span><br><span class="hljs-comment">    1. 对称加密</span><br><span class="hljs-comment">    2. 非对称加密</span><br><span class="hljs-comment">    3. md5信息摘要算法</span><br><span class="hljs-comment">    密码如果不可以反解，用户找回密码</span><br><span class="hljs-comment">    之前是返回给用户原始的密码，但是如果邮件被拦截，原始密码就会存在盗窃风险。</span><br><span class="hljs-comment">    所以现在大多数情况，都是返回一个链接，让用户自己去修改密码。</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure>        </div>      </div>    </div><p class="note ">    用户密码使用md5加密</p>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-5b75660a" role="button" aria-expanded="false" aria-controls="collapse-5b75660a">        <div class="fold-arrow">▶</div>加密      </div>      <div class="fold-collapse collapse" id="collapse-5b75660a">        <div class="fold-content">          <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-comment">// 使用第三方库</span><br><span class="hljs-comment">// https://github.com/anaskhan96/go-password-encoder</span><br><br><span class="hljs-comment">// 安装</span><br><span class="hljs-comment">// go get github.com/anaskhan96/go-password-encoder</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">genMD5</span><span class="hljs-params">(code <span class="hljs-type">string</span>, salt <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">string</span> &#123;<br><br><span class="hljs-comment">// 创建md5实例</span><br>md5 := md5.New()<br><span class="hljs-comment">// 将code数据写入到md5实例中</span><br>_, _ = io.WriteString(md5, code)<br><span class="hljs-comment">// md.sum返回一个16位的字节数组,然后将这个数组转换为字符串返回</span><br><span class="hljs-keyword">return</span> hex.EncodeToString(md5.Sum(<span class="hljs-literal">nil</span>))<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">genMD5</span><span class="hljs-params">(rawPwd <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">string</span> &#123;<br>    options := &amp;password.Options&#123;<span class="hljs-number">16</span>, <span class="hljs-number">100</span>, <span class="hljs-number">32</span>, sha512.New&#125;<br>salt, encodedPwd := password.Encode(rawPwd, options)<br>newPassword := fmt.Sprintf(<span class="hljs-string">&quot;$pbkdf2-sha512$%s$%s&quot;</span>, salt, encodedPwd)<br><span class="hljs-keyword">return</span> newPassword;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">checkPwd</span><span class="hljs-params">(rawPwd <span class="hljs-type">string</span>, encodedPwd <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br>    passwordInfo := strings.Split(encodedPwd, <span class="hljs-string">&quot;$&quot;</span>)<br>    options := &amp;password.Options&#123;<span class="hljs-number">16</span>, <span class="hljs-number">100</span>, <span class="hljs-number">32</span>, sha512.New&#125;<br>check := password.Verify(rawPwd, passwordInfo[<span class="hljs-number">2</span>], passwordInfo[<span class="hljs-number">3</span>], options)<br><span class="hljs-keyword">return</span> check;<br>&#125;<br></code></pre></td></tr></table></figure>        </div>      </div>    </div><blockquote><p>也可以参考博客<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://blog.csdn.net/m0_52649917/article/details/121599809">[1]</span></a></sup>,进行配置。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/m0_52649917/article/details/121599809">https://blog.csdn.net/m0_52649917/article/details/121599809</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Go</category>
      
    </categories>
    
    
    <tags>
      
      <tag>用户微服务模块开发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Go学习大纲内容</title>
    <link href="/2024/06/19/go/go%E5%AD%A6%E4%B9%A0%E5%A4%A7%E7%BA%B2/"/>
    <url>/2024/06/19/go/go%E5%AD%A6%E4%B9%A0%E5%A4%A7%E7%BA%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="Go-容器"><a href="#Go-容器" class="headerlink" title="Go 容器"></a>Go 容器</h2><p class="note note-warning">标签</p><ul><li>数组</li><li>切片</li><li>映射Map</li><li>列表(链表) list</li></ul>    <div class="fold">      <div class="fold-title fold-info collapsed" data-toggle="collapse" href="#collapse-14288bc0" role="button" aria-expanded="false" aria-controls="collapse-14288bc0">        <div class="fold-arrow">▶</div>代码演示      </div>      <div class="fold-collapse collapse" id="collapse-14288bc0">        <div class="fold-content">          <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String []args)</span> &#123;<br>System.out.println(<span class="hljs-string">&quot;你好呀&quot;</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p class="note note-warning">说明：这是一个java的入口方法</p>        </div>      </div>    </div><h2 id="面向对象思想"><a href="#面向对象思想" class="headerlink" title="面向对象思想"></a>面向对象思想</h2><ul><li>结构体</li><li>接口</li><li>类型断言</li><li>函数挂载</li><li>鸭子类型</li></ul><h2 id="并发操作"><a href="#并发操作" class="headerlink" title="并发操作"></a>并发操作</h2><ul><li>goroutine</li><li>并发通信<ul><li>channel</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-keyword">type</span> Person <span class="hljs-keyword">struct</span>&#123;<br>    name <span class="hljs-type">string</span><br>    age <span class="hljs-type">int</span><br>    address <span class="hljs-type">string</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(p *Person)</span></span> eat(food <span class="hljs-type">string</span>) &#123;<br>    fmt.Println(p.name,<span class="hljs-string">&quot;正在吃&quot;</span>,food)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>论文，这是一难点<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="参考资料2">[2]</span></a></sup></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>参考资料1<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>参考资料2<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>这是对应的脚注<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Go</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Go</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
